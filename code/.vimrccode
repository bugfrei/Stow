map P <Plug>(easymotion-sn)
" /Users/carstenschlegel
" SETTING FÜR VIM

" Whitespace TAB mit >~~~ anzeigen
setlocal list
set listchars=tab:>~

" Wörterbuch definieren
set dictionary+=/Users/carstenschlegel/.vim/dict/test
set complete+=k

" Runtime-Pfad hinzufügen
set runtimepath+=/Users/carstenschlegel/.vim

" Sprache einstellen
set spelllang=de

" Zeilennummer und relative Zeilennummern
set nu
set rnu

" Welches Terminal
set shell=pwsh

" Kein Zeilenumbruch
set nowrap

" Zeilenumbruch und Backspace
set backspace=indent,eol,start
set whichwrap=<,>,h,l,[,]

" Speichern der aktuellen Suchen, Puffer usw.
set viminfo=%,'50,\"100,:100,n~\\.viminfo

" Standard-Tabstopgröße und andere Tab-Einstellungen
set tabstop=4
set shiftwidth=4
set expandtab

" Automatisches einrücken zur vorherigen Zeile
set autoindent

" Zeile des Cursor wird markiert
set cursorline

" Cursor-Zeile bei INSERT deaktivieren
autocmd InsertEnter,InsertLeave * set cul!
" Position wird in der Statuszeile angezeigt
set ruler

" Alle gefundenen Treffer werden markiert (entfernen mit :noh)
set hlsearch

" Suffixes die Vim versucht zu öffnen wenn kein Suffix angegeben wurde
set suffixesadd+=.txt
set suffixesadd+=.cs
set suffixesadd+=.json
set suffixesadd+=.xml
set suffixesadd+=.xaml
set suffixesadd+=.html
set suffixesadd+=.css
set suffixesadd+=.py
set suffixesadd+=.psm1

" ------------------------------------------------------------------------------------------------------------
"                                                REMAPS
" ------------------------------------------------------------------------------------------------------------
" Anfang Ende von HTML/XML Tags
noremap gü vitoo<esc>
noremap gä vit<esc>

let mapleader = " "

" nnoremap <leader><tab> /<++><cr>gnc
nnoremap <tab> /.++.<cr>gnc

map <leader>p mzP`zj
map <leader>. mz.`zj
map <leader>P "_dP
" ########## _Kommentare finden                                                                     ##########
map Ö $*j^
map Ä viwpyiwj
map U <C-r>

" ########## Strg+. wiederholt den letzten Ex-Befehl                                                ##########
map <C-.> @:
" ########## Aktuelle Zeile oder markierten Bereich duplizieren (ohne Register!)                    ##########
map <C-P> :t.<CR>

" ########## Bewegungen: ß 1. Zeichen links, ´ ende der Zeile, ü 1. Zeile, ä letzte Zeile           ##########
map ß 0^
map ´ $
map ä <C-D>
map ö <C-U>

" ########## Strg+Space  : Am Ende der Zeile EINFÜGEN mit einem Space                               ##########
map <S-Space> A 

" ########## _           :  ersetzen (Springe zur Cursorposition der Marke)                        ##########
map _ `

" ------------------------------------------------------------------------------------------------------------
"                                            CODING REMAPS
" ------------------------------------------------------------------------------------------------------------
" ########## <Leader>i  : Innerhalb {} einer Klasse nach dem Klassennamen : für Interfaces,         ##########
" ##########              Vererbung usw. einfügen                                                   ##########
noremap <leader>i kkA : 

" ########## F5         : Pythonskript ausführen                                                    ##########
map <F5> :w<CR>:!py %<CR>

" ########## Strg+7     : Redo (für Visual Studio, da dort Strg+R anders belegt)                    ##########
map <C-7> :redo<CR>

" ########## Shift-Ö für {}-Umschluss bei Zeilenmarkierungen (V), nur ö bei Zeichenmarkierung (v)   ##########
vmap Ö "gdi{<CR>}<CR><ESC>kmg=k"gpV'g=
vmap ö "gdi{ }<ESC>"gPa <ESC>
" ########## Strg+F11   : Nach einfügen neuer Klasse diese public machen                            ##########
" ##########              (<Leader>i um danach Vererbung/Interfaces einzutragen)                    ##########
map <C-F11> gg8j^^ipublic<Space><Esc>jo

" ########## An Variablenname am Ende des Feldes ein _ voranstellen                                 ##########
map <Leader>- bi_<Esc>A

" String (2, " oder s)
map <Space>2 c""<Esc>P
map <Space>" c""<Esc>P
map <Space>s c""<Esc>P

" Klammer (8, ( oder k)
map <Space>8 c(  )<Esc>hP
map <Space>( c(  )<Esc>hP
map <Space>k c(  )<Esc>hP

" Geschweifte Klammer / Object (9, { oder o)
map <Space>9 c{  }<Esc>hP
map <Space>{ c{  }<Esc>hP
map <Space>o c{  }<Esc>hP

" Eckige Klammer / Array (0 [ oder a)
map <Space>0 c[  ]<Esc>hP
map <Space>[ c[  ]<Esc>hP
map <Space>a c[  ]<Esc>hP

" Anführungszeichen / String (#, ' oder S)
map <Space># c''<Esc>P
map <Space>' c''<Esc>P
map <Space>S c''<Esc>P

" Template-String / Ticks (ß, ` oder t)
map <Space>ß c``<Esc>P
map <Space>` c``<Esc>P
map <Space>t c``<Esc>P

" Kommentar (7, / oder K)
map <Space>7 c/*  */<Esc>hhP
map <Space>/ c/*  */<Esc>hhP
map <Space>K c/*  */<Esc>hhP

" Tag / HTML/XML Tag (<, h oder x)
map <Space>< c<><Esc>P
map <Space>x c<><Esc>P
map <Space>h c<><Esc>P

" Block (b)
map <Space>b >gvc<Esc>A{<Enter><Esc>P
" ------------------------------------------------------------------------------------------------------------
"                                            DEAKTIVIERTE MAPS
" ------------------------------------------------------------------------------------------------------------
" ########## Strg+C und Strg+V für Kopieren/Einfügen                                                ##########
" vnoremap <C-c> "+y
" map <C-v> "+p

" ########## FÜR UBUNTU VIM!                                                                        ##########
" let &t_SI = "\<esc>[5 q"
" let &t_SR = "\<esc>[3 q"
" let &t_EI = "\<esc>[2 q"

" ########## Cursorbewegung umschalten (von jk normale Zeilen zu jk anzeigezeilen);nur bei set wrap ##########
" nnoremap k gk
" nnoremap j gj
" nnoremap gk k
" nnoremap gj j

" ########## Cursortasten unbrauchbar machen (zum erlernen der hjkl-Navigation)                     ##########
" noremap <Up> <Nop>
" noremap <Down> <Nop>
" noremap <Left> <Nop>
" noremap <Right> <Nop>

" ########## Entfernentaste als Esc-Taste nutzen                                                    ##########
" nnoremap <Del> <Esc>
" vnoremap <Del> <Esc>gV
" onoremap <Del> <Esc>
" cnoremap <Del> <C-C><Esc>
" inoremap <Del> <Esc>`^
" tnoremap <Del> <C-\><C-n>

" --- NICHT FUNKTIONIERENDE MAPS ---

" vnoremap ö exe "'< normal O{\<esc>" | exe "'> normal o}\<esc>" | exe "'<,'> normal >>"

nmap <Leader>L <Plug>(easymotion-overwin-line)
nmap <Leader><Leader>S <Plug>(easymotion-s2)

nnoremap w <Plug>(easymotion-sn)
noremap w <Plug>(easymotion-sn)
noremap W w
nnoremap W w

map  / <Plug>(easymotion-sn)
map  ! <Plug>(easymotion-sn)
omap / <Plug>(easymotion-tn)

imap <C-d> Hallo3

imap <C-a> <esc>o{<cr><esc>S

map j gj
map k gk


